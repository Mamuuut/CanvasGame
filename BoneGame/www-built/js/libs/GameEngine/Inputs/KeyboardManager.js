define([],function(){function t(){if(e!==null)throw new Error("Cannot instantiate more than one KeyboardManager, use KeyboardManager.getInstance()");this.initialize()}var e=null;return t.prototype={initialize:function(){this._keydown={},this._keyup={},this._keyCommands=[],this.KEY_CODES={enter:13,escape:27,left:37,up:38,right:39},this.TYPES={keydown:0,keydownRepeat:1,keyup:2};var e=this;$(document).keydown(function(t){var n=t.which;e._keydown[n]||(e._keydown[n]=0)}),$(document).keyup(function(t){var n=t.which;e._keyup[n]=!0,delete e._keydown[n]})},addCommand:function(e,t,n){var r={type:e,key:t,command:n};this._keyCommands.push(r)},clearCommands:function(){this._keyCommands=[]},update:function(){var e;for(e in this._keydown)this._keydown[e]++;for(e in this._keyCommands){var t=this._keyCommands[e];t&&this.checkCommand(t)&&t.command.execute()}this._keyup=[]},checkCommand:function(e){var t=e.key;switch(e.type){case this.TYPES.keydown:return 1==this._keydown[t];case this.TYPES.keydownRepeat:return null!=this._keydown[t];case this.TYPES.keyup:return 1==this._keyup[t];default:return!1}return!1}},t.getInstance=function(){return e===null&&(e=new t),e},t.getInstance()})